# Parser Configuration

types.list=undefined,comment,configuration.start,configuration,configuration.end

public static final String[] LINE_TYPES = new String[] { "undefined",
            "Comment", ">> Configuration", "Configuration",
            "<< Configuration", ">> Actors", "Actors", "<< Actors",
            ">> Test", "Test", "<< Test" };

    public static final String[] LINE_PATTERNS = new String[] { "no_pattern",
            "\\s{0,}#.*", "\\s{0,}>> Configuration\\s{0,}", "no_pattern",
            "\\s{0,}<< Configuration\\s{0,}", "\\s{0,}>> Actors\\s{0,}",
            "no_pattern", "\\s{0,}<< Actors\\s{0,}", "\\s{0,}>> Test\\s{0,}",
            "no_pattern", "\\s{0,}<< Test\\s{0,}" };

    /**
     * SLF4J logger
     */
    protected Logger logger = LoggerFactory
            .getLogger(com.fjl.test.tools.parser.TestParser.class);

    protected static final String START_BLOC_PATTERN = ".*>>.*";
    protected static final String END_BLOC_PATTERN = ".*<<.*";

    protected static final String COMMENT_LINE_PATTERN = "\\s{0,}#.*";
    protected static final String CONFIG_START_LINE_PATTERN = "\\s{0,}>> Configuration\\s{0,}";
    protected static final String CONFIG_END_LINE_PATTERN = "\\s{0,}<< Configuration\\s{0,}";
    protected static final String ACTORS_START_LINE_PATTERN =  "\\s{0,}>> Actors\\s{0,}";
    protected static final String ACTORS_END_LINE_PATTERN = "\\s{0,}<< Actors\\s{0,}";
    protected static final String TEST_START_LINE_PATTERN = "\\s{0,}>> Test\\s{0,}";
    protected static final String TEST_END_LINE_PATTERN = "\\s{0,}<< Test\\s{0,}";
